#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'twoStacks' function below.
#
# The function is expected to return an INTEGER.
# The function accepts following parameters:
#  1. INTEGER maxSum
#  2. INTEGER_ARRAY a
#  3. INTEGER_ARRAY b
#

def twoStacks(maxSum, a, b):
    i,j,currSum,maxCount=0,0,0,0
    while i<len(a) and currSum+a[i]<=maxSum:
        currSum+=a[i]
        i+=1
    maxCount=i
    while j<len(b) and currSum+b[j]<=maxSum:
        currSum+=b[j]
        j+=1
        maxCount=max(maxCount,i+j)
    while j<len(b):
        currSum+=b[j]
        j+=1
        while currSum>maxSum and i>0:
            i-=1
            currSum-=a[i]
        if currSum<=maxSum:
            maxCount=max(maxCount,i+j)
    return maxCount

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    g = int(input().strip())

    for g_itr in range(g):
        first_multiple_input = input().rstrip().split()

        n = int(first_multiple_input[0])

        m = int(first_multiple_input[1])

        maxSum = int(first_multiple_input[2])

        a = list(map(int, input().rstrip().split()))

        b = list(map(int, input().rstrip().split()))

        result = twoStacks(maxSum, a, b)

        fptr.write(str(result) + '\n')

    fptr.close()
